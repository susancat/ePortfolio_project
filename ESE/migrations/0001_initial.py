# Generated by Django 2.2.4 on 2019-08-05 01:54

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_fields.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_ID', models.CharField(max_length=128, unique=True)),
                ('title', models.CharField(max_length=256)),
                ('description', models.CharField(max_length=1280)),
                ('text', models.CharField(max_length=2560)),
                ('slug', models.SlugField(unique=True)),
                ('student_slug', models.SlugField()),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('modify_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_ID', models.CharField(max_length=128, unique=True)),
                ('name', models.CharField(max_length=128)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('color', models.CharField(default='#007bff', max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='Assessor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('assessor_ID', models.CharField(max_length=128, unique=True)),
                ('first_name', models.CharField(max_length=128)),
                ('surname', models.CharField(max_length=128)),
                ('user_group', models.CharField(max_length=128)),
                ('institution', models.CharField(max_length=128)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('SID', models.CharField(max_length=128, unique=True)),
                ('first_name', models.CharField(max_length=128)),
                ('surname', models.CharField(max_length=128)),
                ('major', models.CharField(max_length=128)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_student', models.BooleanField(default=False)),
                ('is_assessor', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', django_fields.fields.DefaultStaticImageField(blank=True, upload_to='')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_ID', models.CharField(max_length=128, unique=True)),
                ('review_text', models.CharField(max_length=1280)),
                ('slug', models.SlugField(unique=True)),
                ('assessor_slug', models.SlugField()),
                ('assignment_slug', models.SlugField()),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('modify_time', models.DateTimeField(auto_now_add=True)),
                ('assignment_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ESE.Assignment')),
                ('module_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ESE.Module')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to=settings.AUTH_USER_MODEL)),
                ('assessor_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ESE.Assessor')),
            ],
        ),
        migrations.AddField(
            model_name='assignment',
            name='module_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ESE.Module'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Student_comp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('semester', models.IntegerField(default=0)),
                ('rating', models.IntegerField(default=0)),
                ('slug', models.SlugField(unique=True)),
                ('student_slug', models.SlugField()),
                ('Module_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ESE.Module')),
                ('assignment_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ESE.Assignment')),
                ('feedback_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ESE.Feedback')),
                ('SID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_competency', to='ESE.Student')),
            ],
        ),
        migrations.AddField(
            model_name='module',
            name='SID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ESE.Student'),
        ),
        migrations.CreateModel(
            name='Competency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('group_ID', models.CharField(max_length=128)),
                ('group_name', models.CharField(max_length=128)),
                ('dimension_ID', models.CharField(max_length=128)),
                ('dimension_name', models.CharField(max_length=128)),
                ('competency_ID', models.CharField(max_length=128, unique=True)),
                ('description', models.CharField(max_length=1280)),
                ('slug', models.SlugField(unique=True)),
                ('SID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ESE.Student')),
            ],
            options={
                'verbose_name_plural': 'Competencies',
            },
        ),
        migrations.AddField(
            model_name='assignment',
            name='SID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ESE.Student'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='assessor_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ESE.Assessor'),
        ),
        migrations.AddField(
            model_name='assessor',
            name='module_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ESE.Module'),
        ),
    ]
